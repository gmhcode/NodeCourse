const fs = require('fs')
const chalk = require('chalk')

/*
....###....########..########.....##....##..#######..########.########
...##.##...##.....##.##.....##....###...##.##.....##....##....##......
..##...##..##.....##.##.....##....####..##.##.....##....##....##......
.##.....##.##.....##.##.....##....##.##.##.##.....##....##....######..
.#########.##.....##.##.....##....##..####.##.....##....##....##......
.##.....##.##.....##.##.....##....##...###.##.....##....##....##......
.##.....##.########..########.....##....##..#######.....##....########
*/
const addNote = (title, body) => {
  const notes = loadNotes()
  // const duplicateNotes = notes.filter((note) => note.title === title)
  const duplicateNote = notes.find((note) => note.title === title)

  debugger

  if (!duplicateNote) {
    notes.push({
      title: title,
      body: body
    })
    saveNotes(notes)
    console.log(chalk.green.inverse('New Notes Added'))
  } else {
    console.log(chalk.red.inverse('Note title taken'))
  }
  // if (!duplicateNote) {
  //   notes.push({
  //     title: title,
  //     body: body
  //   })
  //   saveNotes(notes)
  //   console.log(chalk.green.inverse('New Notes Added'))
  // } else {
  //   console.log(chalk.red.inverse('Note title taken'))
  // }
}

/*
..######.....###....##.....##.########.##....##..#######..########.########..######.
.##....##...##.##...##.....##.##.......###...##.##.....##....##....##.......##....##
.##........##...##..##.....##.##.......####..##.##.....##....##....##.......##......
..######..##.....##.##.....##.######...##.##.##.##.....##....##....######....######.
.......##.#########..##...##..##.......##..####.##.....##....##....##.............##
.##....##.##.....##...##.##...##.......##...###.##.....##....##....##.......##....##
..######..##.....##....###....########.##....##..#######.....##....########..######.
*/
const saveNotes = (notes) => {
  const dataJSON = JSON.stringify(notes)
  fs.writeFileSync('notes.json', dataJSON)
}
/*
.##........#######.....###....########.....##....##..#######..########.########..######.
.##.......##.....##...##.##...##.....##....###...##.##.....##....##....##.......##....##
.##.......##.....##..##...##..##.....##....####..##.##.....##....##....##.......##......
.##.......##.....##.##.....##.##.....##....##.##.##.##.....##....##....######....######.
.##.......##.....##.#########.##.....##....##..####.##.....##....##....##.............##
.##.......##.....##.##.....##.##.....##....##...###.##.....##....##....##.......##....##
.########..#######..##.....##.########.....##....##..#######.....##....########..######.
*/
const loadNotes = () => {
  try {
    const dataBuffer = fs.readFileSync('notes.json')
    const dataJSON = dataBuffer.toString()
    return JSON.parse(dataJSON)
  } catch (e) {
    return []
  }

}
/*
.########..########.##.....##..#######..##.....##.########.##....##..#######..########.########..######.
.##.....##.##.......###...###.##.....##.##.....##.##.......###...##.##.....##....##....##.......##....##
.##.....##.##.......####.####.##.....##.##.....##.##.......####..##.##.....##....##....##.......##......
.########..######...##.###.##.##.....##.##.....##.######...##.##.##.##.....##....##....######....######.
.##...##...##.......##.....##.##.....##..##...##..##.......##..####.##.....##....##....##.............##
.##....##..##.......##.....##.##.....##...##.##...##.......##...###.##.....##....##....##.......##....##
.##.....##.########.##.....##..#######.....###....########.##....##..#######.....##....########..######.
*/
const removeNote = (title) => {
  const notes = loadNotes()
  const filteredNotes = notes.filter((note) => note.title !== title)
  if (notes.length > filteredNotes.length) {
    console.log(chalk.green.inverse('Note removed!'))
  } else {
    console.log(chalk.red.inverse('No note Found'))
  }
  saveNotes(filteredNotes)
}

/*
.##.......####..######..########.##....##..#######..########.########..######.
.##........##..##....##....##....###...##.##.....##....##....##.......##....##
.##........##..##..........##....####..##.##.....##....##....##.......##......
.##........##...######.....##....##.##.##.##.....##....##....######....######.
.##........##........##....##....##..####.##.....##....##....##.............##
.##........##..##....##....##....##...###.##.....##....##....##.......##....##
.########.####..######.....##....##....##..#######.....##....########..######.
*/
const listNotes = () => {
  const notes = loadNotes()
  notes.forEach(note => {
    console.log(note)
  });
}
/*
.########..########....###....########.....##....##..#######..########.########..######.
.##.....##.##.........##.##...##.....##....###...##.##.....##....##....##.......##....##
.##.....##.##........##...##..##.....##....####..##.##.....##....##....##.......##......
.########..######...##.....##.##.....##....##.##.##.##.....##....##....######....######.
.##...##...##.......#########.##.....##....##..####.##.....##....##....##.............##
.##....##..##.......##.....##.##.....##....##...###.##.....##....##....##.......##....##
.##.....##.########.##.....##.########.....##....##..#######.....##....########..######.
*/
const readNotes = (title) => {
  const notes = loadNotes()
  const readNote = notes.find((note) => note.title === title)
  if (readNote) {
    console.log(chalk.blue(readNote.title) + ' ' + readNote.body)
  } else {
    console.log(chalk.red('No Note Found'))
  }

}
module.exports = {
  addNote: addNote,
  removeNote: removeNote,
  listNotes: listNotes,
  readNotes: readNotes
}